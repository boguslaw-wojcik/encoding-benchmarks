// Code generated by protoc-gen-go. DO NOT EDIT.
// source: superhero.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Superhero struct {
	Id                   int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AffiliationId        int32         `protobuf:"varint,2,opt,name=affiliation_id,json=affiliationId,proto3" json:"affiliation_id,omitempty"`
	Name                 string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Life                 float32       `protobuf:"fixed32,4,opt,name=life,proto3" json:"life,omitempty"`
	Energy               float32       `protobuf:"fixed32,5,opt,name=energy,proto3" json:"energy,omitempty"`
	Powers               []*Superpower `protobuf:"bytes,6,rep,name=powers,proto3" json:"powers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Superhero) Reset()         { *m = Superhero{} }
func (m *Superhero) String() string { return proto.CompactTextString(m) }
func (*Superhero) ProtoMessage()    {}
func (*Superhero) Descriptor() ([]byte, []int) {
	return fileDescriptor_23a1973666112575, []int{0}
}

func (m *Superhero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Superhero.Unmarshal(m, b)
}
func (m *Superhero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Superhero.Marshal(b, m, deterministic)
}
func (m *Superhero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Superhero.Merge(m, src)
}
func (m *Superhero) XXX_Size() int {
	return xxx_messageInfo_Superhero.Size(m)
}
func (m *Superhero) XXX_DiscardUnknown() {
	xxx_messageInfo_Superhero.DiscardUnknown(m)
}

var xxx_messageInfo_Superhero proto.InternalMessageInfo

func (m *Superhero) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Superhero) GetAffiliationId() int32 {
	if m != nil {
		return m.AffiliationId
	}
	return 0
}

func (m *Superhero) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Superhero) GetLife() float32 {
	if m != nil {
		return m.Life
	}
	return 0
}

func (m *Superhero) GetEnergy() float32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *Superhero) GetPowers() []*Superpower {
	if m != nil {
		return m.Powers
	}
	return nil
}

type Superpower struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Damage               float32  `protobuf:"fixed32,3,opt,name=damage,proto3" json:"damage,omitempty"`
	Energy               float32  `protobuf:"fixed32,4,opt,name=energy,proto3" json:"energy,omitempty"`
	Passive              bool     `protobuf:"varint,5,opt,name=passive,proto3" json:"passive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Superpower) Reset()         { *m = Superpower{} }
func (m *Superpower) String() string { return proto.CompactTextString(m) }
func (*Superpower) ProtoMessage()    {}
func (*Superpower) Descriptor() ([]byte, []int) {
	return fileDescriptor_23a1973666112575, []int{1}
}

func (m *Superpower) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Superpower.Unmarshal(m, b)
}
func (m *Superpower) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Superpower.Marshal(b, m, deterministic)
}
func (m *Superpower) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Superpower.Merge(m, src)
}
func (m *Superpower) XXX_Size() int {
	return xxx_messageInfo_Superpower.Size(m)
}
func (m *Superpower) XXX_DiscardUnknown() {
	xxx_messageInfo_Superpower.DiscardUnknown(m)
}

var xxx_messageInfo_Superpower proto.InternalMessageInfo

func (m *Superpower) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Superpower) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Superpower) GetDamage() float32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *Superpower) GetEnergy() float32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *Superpower) GetPassive() bool {
	if m != nil {
		return m.Passive
	}
	return false
}

func init() {
	proto.RegisterType((*Superhero)(nil), "model.Superhero")
	proto.RegisterType((*Superpower)(nil), "model.Superpower")
}

func init() { proto.RegisterFile("superhero.proto", fileDescriptor_23a1973666112575) }

var fileDescriptor_23a1973666112575 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd0, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x06, 0x60, 0x92, 0x6d, 0xa3, 0x3b, 0xe2, 0x8a, 0x39, 0x2c, 0x39, 0x96, 0x05, 0x21, 0x5e,
	0x7a, 0xd0, 0xa7, 0xf0, 0x1a, 0x1f, 0x40, 0x22, 0x99, 0xae, 0x03, 0x6d, 0x13, 0x92, 0xaa, 0xe8,
	0x3b, 0xf9, 0x8e, 0xe2, 0xd8, 0x62, 0x65, 0x6f, 0xf3, 0xff, 0x7f, 0x0e, 0x1f, 0x81, 0xab, 0xf2,
	0x9a, 0x30, 0xbf, 0x60, 0x8e, 0x6d, 0xca, 0x71, 0x8a, 0xba, 0x1e, 0x62, 0xc0, 0xfe, 0xf0, 0x25,
	0x60, 0xfb, 0xb8, 0x4c, 0x7a, 0x07, 0x92, 0x82, 0x11, 0x8d, 0xb0, 0xb5, 0x93, 0x14, 0xf4, 0x0d,
	0xec, 0x7c, 0xd7, 0x51, 0x4f, 0x7e, 0xa2, 0x38, 0x3e, 0x51, 0x30, 0x92, 0xb7, 0xcb, 0x55, 0xfb,
	0x10, 0xb4, 0x86, 0x6a, 0xf4, 0x03, 0x9a, 0x4d, 0x23, 0xec, 0xd6, 0xf1, 0xfd, 0xd3, 0xf5, 0xd4,
	0xa1, 0xa9, 0x1a, 0x61, 0xa5, 0xe3, 0x5b, 0xef, 0x41, 0xe1, 0x88, 0xf9, 0xf8, 0x61, 0x6a, 0x6e,
	0xe7, 0xa4, 0x6f, 0x41, 0xa5, 0xf8, 0x8e, 0xb9, 0x18, 0xd5, 0x6c, 0xec, 0xc5, 0xdd, 0x75, 0xcb,
	0xb8, 0x96, 0x61, 0xbc, 0xb8, 0xf9, 0xc1, 0xe1, 0x13, 0xe0, 0xaf, 0x3d, 0xf1, 0x2e, 0x10, 0xb9,
	0x82, 0xec, 0x41, 0x05, 0x3f, 0xf8, 0xe3, 0x2f, 0x4f, 0xba, 0x39, 0xad, 0x30, 0xd5, 0x3f, 0x8c,
	0x81, 0xb3, 0xe4, 0x4b, 0xa1, 0x37, 0x64, 0xe5, 0xb9, 0x5b, 0xe2, 0xb3, 0xe2, 0x9f, 0xbb, 0xff,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x48, 0x4d, 0x41, 0x4c, 0x01, 0x00, 0x00,
}
